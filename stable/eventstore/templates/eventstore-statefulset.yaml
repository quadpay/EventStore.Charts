apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "eventstore.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: {{ include "eventstore.name" . }}
    helm.sh/chart: {{ include "eventstore.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: database
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "eventstore.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.clusterSize }}
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ include "eventstore.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/eventstore-configmap.yaml") . | sha256sum }}
      {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.metrics.port | quote }}
      {{- end }}
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "eventstore.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: database
    spec:      
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      {{- if .Values.ssl.enabled }}
      initContainers:
        - name: secretwriter
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          volumeMounts:
            - mountPath: /certificate
              name: certificate
            - mountPath: /secret
              name: secret-volume
          command:
            - /bin/bash
            - -c
          args:
            - openssl pkcs12 -export -out /certificate/eventstore.p12 -in /secret/tls.crt -inkey /secret/tls.key -password pass:{{ .Values.ssl.bundlePassword }};
      {{- end }}
      containers:
      {{- if .Values.metrics.enabled }}
        - name: prometheus-exporter
          image: "{{ .Values.metrics.image }}:{{ .Values.metrics.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: EVENTSTORE_USER
              value: admin
            - name: EVENTSTORE_PASSWORD
              value: {{- if .Values.admin.password }} {{- .Values.admin.password }} {{- else }} changeit {{- end }}
            - name: PORT
              value: {{ .Values.metrics.port | quote }}
            - name: CLUSTER_MODE
              value: {{- if and .Values.extIp (gt (.Values.clusterSize | float64) 1.0) }} cluster {{- else }} single {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
          {{- if .Values.metrics.resources }}
          resources: {{- toYaml .Values.metrics.resources | nindent 12 -}}
          {{- end }}
      {{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "eventstore.fullname" . }}-env
          env: 
            - name: EVENTSTORE_INT_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: EVENTSTORE_EXT_IP
            {{- if .Values.extIp }}
              value: {{ .Values.extIp }}
            {{- else }}
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- end }}
          {{- if and .Values.extIp (gt .Values.clusterSize 1.0) }}
            - name: EVENTSTORE_EXT_IP_ADVERTISE_AS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- end }}
          ports:
            {{- if .Values.ssl.enabled }}
            - containerPort: {{ .Values.ssl.extSecureTcpPort }}
            {{- end }}
            - containerPort: {{ .Values.intTcpPort }}
            - containerPort: {{ .Values.extTcpPort }}
            - containerPort: {{ .Values.intHttpPort }}
            - containerPort: {{ .Values.extHttpPort }}
          livenessProbe:
            httpGet:
              path: /stats
              port: {{ .Values.extHttpPort }}
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /stats
              port: {{ .Values.extHttpPort }}
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 15
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 -}}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
          {{- if .Values.ssl.enabled }}
            - name: certificate
              mountPath: /certificate
          {{- end }}
      volumes:
      {{- if .Values.ssl.enabled }}
        - name: certificate
          emptyDir: {}
        - name: secret-volume
          secret:
            secretName: {{ .Values.ssl.tlsSecretName }}
      {{- end }}
      {{- if (not .Values.persistence.enabled) }}
        - name: data
          emptyDir: {}
      {{- else if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}
{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        namespace: {{ .Release.Namespace | quote }}
        labels:
          app.kubernetes.io/name: {{ include "eventstore.name" . }}
          helm.sh/chart: {{ include "eventstore.chart" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- end }}
